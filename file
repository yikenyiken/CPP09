
pair_size: 1
step: 1
loser_count: 3
is_pend_found: 1
vec after pair sort: 2, 4, 1, 6, 5, 8, 7, 

pair_size: 2
step: 2
loser_count: 1
is_pend_found: 1
vec after pair sort: 2, 4, 1, 6, 5, 8, 7, 

## insertion for pair_size 2

## insertion for pair_size 1
winners before insertion: 2, 4, 6, 8, 
starting at j(n): 3
inserting pair of winners' member at index: 3
inserting: 5
optimal length: 3
comapring 5 to 4
last compared to: 6
winners after insertion: 2, 4, 5, 6, 8, 
starting at j(n): 3
inserting pair of winners' member at index: 3
inserting: 1
optimal length: 3
comapring 1 to 4
last compared to: 2
winners after insertion: 1, 2, 4, 5, 6, 8, 
